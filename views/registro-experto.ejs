<!DOCTYPE html>
<html lang="es">

<head>
  <!-- Metadatos y enlaces a recursos externos -->
  <meta charset="UTF-8" />
  <!-- Codificación de caracteres UTF-8 -->
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <!-- Diseño responsivo para dispositivos móviles -->
  <title>Registro | Servitech</title>
  <!-- Título de la pestaña del navegador -->
  <link rel="stylesheet" href="/assets/css/auth.css" />
  <!-- Estilos específicos para autenticación -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <!-- Iconos de Font Awesome -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
  <!-- Fuente Inter para mejorar la tipografía -->
</head>

<body>

  <main class="registro-experto-main">
    <section class="registro-experto-section">
      <% if (typeof error !=='undefined' ) { %>
        <div class="alert alert-danger">
          <%= error %>
        </div>
        <% } %>
          <% if (typeof success !=='undefined' ) { %>
            <div class="alert alert-success">
              <%= success %><br>
                Serás redirigido a tu panel de experto en unos segundos...
            </div>
            <script>
              setTimeout(function () {
                window.location.href = '/perfil-experto';
              }, 3000);
            </script>
            <% } %>

              <div class="registro-header">
                <h1>Registro de Experto</h1>
                <p class="subtitle">Completa tu perfil para ofrecer asesorías</p>
              </div>

              <form id="registroExpertoForm" class="registro-experto-form">
                <!-- Información Básica -->
                <div class="form-row">
                  <div class="form-group compact">
                    <label for="email">Email registrado</label>
                    <input type="email" id="email" name="email" required placeholder="tucorreo@ejemplo.com"
                      value="<%= typeof email !== 'undefined' ? email : '' %>" readonly>
                    <p class="form-hint">Email de tu cuenta</p>
                  </div>

                  <div class="form-group compact">
                    <label for="especialidad">Especialidad</label>
                    <select id="especialidad" name="especialidad" required>
                      <option value="">Selecciona una especialidad</option>
                    </select>
                  </div>
                </div>

                <!-- Descripción -->
                <div class="form-group">
                  <label for="descripcion">Descripción profesional</label>
                  <textarea id="descripcion" name="descripcion" required rows="3"
                    placeholder="Tu experiencia y enfoque profesional"></textarea>
                </div>

                <!-- Áreas de Conocimiento -->
                <div class="form-row">
                  <div class="form-group compact">
                    <label for="categorias">Categorías</label>
                    <select id="categorias" name="categorias" multiple required style="min-height: 80px;">
                      <!-- Opciones dinámicas -->
                    </select>
                    <p class="form-hint">Selecciona una o varias categorías tecnológicas</p>
                  </div>

                  <div class="form-group compact">
                    <label for="skills">Habilidades</label>
                    <select id="skills" name="skills" multiple style="min-height: 80px;">
                      <!-- Opciones dinámicas -->
                    </select>
                    <input type="text" id="nuevaSkill"
                      placeholder="Agregar nueva habilidad tecnológica y presiona Enter">
                    <p class="form-hint">Selecciona o agrega habilidades tecnológicas</p>
                  </div>
                </div>

                <!-- Horarios Múltiples -->
                <div class="form-group">
                  <label for="diasDisponibles">Días disponibles</label>
                  <select id="diasDisponibles" name="diasDisponibles" multiple required style="min-height: 80px;">
                    <option value="Lunes">Lunes</option>
                    <option value="Martes">Martes</option>
                    <option value="Miércoles">Miércoles</option>
                    <option value="Jueves">Jueves</option>
                    <option value="Viernes">Viernes</option>
                    <option value="Sábado">Sábado</option>
                    <option value="Domingo">Domingo</option>
                  </select>
                  <p class="form-hint">Selecciona uno o varios días en los que puedes dar asesorías</p>
                </div>

                <!-- Tarifas -->
                <div class="form-group">
                  <label for="precio">Precio por hora (USD)</label>
                  <div class="price-input">
                    <span class="currency">$</span>
                    <input type="number" id="precio" name="precio" min="0" step="0.01" required placeholder="0.00">
                  </div>
                </div>

                <!-- Datos Bancarios -->
                <div class="form-section">
                  <h3 class="section-title">
                    <i class="fas fa-university"></i>
                    Datos Bancarios para Pagos
                  </h3>
                  <p class="section-subtitle">Información necesaria para recibir pagos por tus asesorías</p>

                  <div class="form-row">
                    <div class="form-group compact">
                      <label for="banco">Banco *</label>
                      <select id="banco" name="banco" required>
                        <option value="">Selecciona tu banco</option>
                        <option value="Banco de Bogotá">Banco de Bogotá</option>
                        <option value="Bancolombia">Bancolombia</option>
                        <option value="Banco de Occidente">Banco de Occidente</option>
                        <option value="BBVA Colombia">BBVA Colombia</option>
                        <option value="Banco Popular">Banco Popular</option>
                        <option value="Banco Caja Social">Banco Caja Social</option>
                        <option value="Banco AV Villas">Banco AV Villas</option>
                        <option value="Banco Agrario">Banco Agrario</option>
                        <option value="Davivienda">Davivienda</option>
                        <option value="Banco Falabella">Banco Falabella</option>
                        <option value="Scotiabank Colpatria">Scotiabank Colpatria</option>
                        <option value="Banco Santander">Banco Santander</option>
                        <option value="Banco GNB Sudameris">Banco GNB Sudameris</option>
                        <option value="Banco Itaú">Banco Itaú</option>
                        <option value="Banco Pichincha">Banco Pichincha</option>
                        <option value="Banco Cooperativo Coopcentral">Banco Cooperativo Coopcentral</option>
                        <option value="Nequi">Nequi</option>
                        <option value="Daviplata">Daviplata</option>
                        <option value="Otro">Otro</option>
                      </select>
                    </div>

                    <div class="form-group compact">
                      <label for="tipoCuenta">Tipo de cuenta *</label>
                      <select id="tipoCuenta" name="tipoCuenta" required>
                        <option value="">Selecciona el tipo</option>
                        <option value="Cuenta de Ahorros">Cuenta de Ahorros</option>
                        <option value="Cuenta Corriente">Cuenta Corriente</option>
                        <option value="Cuenta de Nómina">Cuenta de Nómina</option>
                        <option value="Cuenta Digital">Cuenta Digital</option>
                      </select>
                    </div>
                  </div>

                  <div class="form-row">
                    <div class="form-group compact">
                      <label for="numeroCuenta">Número de cuenta *</label>
                      <div style="position: relative;">
                        <input type="password" id="numeroCuenta" name="numeroCuenta" required
                          placeholder="Número de cuenta bancaria" pattern="[0-9\-]*" title="Solo números y guiones"
                          style="padding-right: 40px;">
                        <button type="button" id="toggleAccountNumber"
                          style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); background: none; border: none; color: var(--text-secondary); cursor: pointer;">
                          <i class="fas fa-eye"></i>
                        </button>
                      </div>
                      <p class="form-hint">Número completo de tu cuenta bancaria</p>
                    </div>

                    <div class="form-group compact">
                      <label for="titular">Titular de la cuenta *</label>
                      <input type="text" id="titular" name="titular" required placeholder="Nombre completo del titular"
                        title="Nombre tal como aparece en la cuenta bancaria">
                      <p class="form-hint">Debe coincidir exactamente con el nombre en la cuenta</p>
                    </div>
                  </div>

                  <div class="form-row">
                    <div class="form-group compact">
                      <label for="tipoDocumento">Tipo de documento *</label>
                      <select id="tipoDocumento" name="tipoDocumento" required>
                        <option value="">Selecciona el tipo</option>
                        <option value="Cédula de Ciudadanía">Cédula de Ciudadanía</option>
                        <option value="Cédula de Extranjería">Cédula de Extranjería</option>
                        <option value="Pasaporte">Pasaporte</option>
                        <option value="NIT">NIT (Persona Jurídica)</option>
                      </select>
                    </div>

                    <div class="form-group compact">
                      <label for="numeroDocumento">Número de documento *</label>
                      <input type="text" id="numeroDocumento" name="numeroDocumento" required
                        placeholder="Número de identificación" pattern="[0-9\-]*"
                        title="Número del documento de identidad">
                      <p class="form-hint">Documento de identidad del titular</p>
                    </div>
                  </div>

                  <div class="form-group">
                    <label for="telefonoContacto">Teléfono de contacto</label>
                    <input type="tel" id="telefonoContacto" name="telefonoContacto" placeholder="+57 300 123 4567"
                      title="Teléfono de contacto para verificación de pagos">
                    <p class="form-hint">Opcional: Teléfono para contacto sobre pagos</p>
                  </div>

                  <div class="info-card">
                    <div class="info-card-header">
                      <i class="fas fa-info-circle"></i>
                      <strong>Información importante sobre pagos</strong>
                    </div>
                    <ul class="info-list">
                      <li><i class="fas fa-check"></i> Los pagos se procesan cada 15 días</li>
                      <li><i class="fas fa-check"></i> Se requiere verificación de cuenta antes del primer pago</li>
                      <li><i class="fas fa-check"></i> Los datos bancarios pueden editarse desde tu perfil</li>
                      <li><i class="fas fa-check"></i> Mantenemos seguros tus datos financieros</li>
                    </ul>
                  </div>
                </div>

                <!-- Botón de envío -->
                <div class="form-footer">
                  <button type="button" id="submitExperto" class="btn btn-primary">
                    <span>Enviar solicitud</span>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2"
                        stroke-linecap="round" stroke-linejoin="round" />
                    </svg>
                  </button>
                </div>
                <script>
                  document.addEventListener('DOMContentLoaded', async function () {
                    // Validaciones en tiempo real para datos bancarios
                    const numeroCuentaInput = document.getElementById('numeroCuenta');
                    const numeroDocumentoInput = document.getElementById('numeroDocumento');
                    const telefonoInput = document.getElementById('telefonoContacto');
                    const titularInput = document.getElementById('titular');

                    // Validar solo números en número de cuenta
                    numeroCuentaInput.addEventListener('input', function (e) {
                      this.value = this.value.replace(/[^0-9\-]/g, '');
                      if (this.value.length < 10) {
                        this.style.borderColor = '#ffc107';
                      } else {
                        this.style.borderColor = 'var(--primary-color)';
                      }
                    });

                    // Validar solo números en documento
                    numeroDocumentoInput.addEventListener('input', function (e) {
                      this.value = this.value.replace(/[^0-9\-]/g, '');
                    });

                    // Validar formato de teléfono
                    telefonoInput.addEventListener('input', function (e) {
                      this.value = this.value.replace(/[^0-9+\-\s]/g, '');
                    });

                    // Capitalizar nombre del titular
                    titularInput.addEventListener('input', function (e) {
                      this.value = this.value.replace(/[^a-zA-ZáéíóúÁÉÍÓÚñÑ\s]/g, '');
                      // Capitalizar primera letra de cada palabra
                      this.value = this.value.toLowerCase().replace(/\b\w/g, l => l.toUpperCase());
                    });

                    // Funcionalidad para mostrar/ocultar número de cuenta
                    const toggleBtn = document.getElementById('toggleAccountNumber');
                    if (toggleBtn) {
                      toggleBtn.addEventListener('click', function () {
                        const input = document.getElementById('numeroCuenta');
                        const icon = this.querySelector('i');

                        if (input.type === 'password') {
                          input.type = 'text';
                          icon.className = 'fas fa-eye-slash';
                        } else {
                          input.type = 'password';
                          icon.className = 'fas fa-eye';
                        }
                      });
                    }

                    // Poblar especialidades
                    const especialidadSelect = document.getElementById('especialidad');
                    fetch('/api/especialidades')
                      .then(res => res.json())
                      .then(data => {
                        data.forEach(e => {
                          const opt = document.createElement('option');
                          opt.value = e.nombre;
                          opt.textContent = e.nombre;
                          especialidadSelect.appendChild(opt);
                        });
                      });

                    // Poblar categorías
                    const categoriasSelect = document.getElementById('categorias');
                    fetch('/api/categorias')
                      .then(res => res.json())
                      .then(data => {
                        data.forEach(c => {
                          const opt = document.createElement('option');
                          opt.value = c.nombre;
                          opt.textContent = c.nombre;
                          categoriasSelect.appendChild(opt);
                        });
                      });

                    // Poblar habilidades sugeridas (de expertos existentes)
                    const skillsSelect = document.getElementById('skills');
                    fetch('/api/skills')
                      .then(res => res.json())
                      .then(data => {
                        data.forEach(skill => {
                          const opt = document.createElement('option');
                          opt.value = skill.nombre;
                          opt.textContent = skill.nombre;
                          skillsSelect.appendChild(opt);
                        });
                      });

                    // Permitir agregar nuevas habilidades
                    const nuevaSkillInput = document.getElementById('nuevaSkill');
                    nuevaSkillInput.addEventListener('keydown', function (e) {
                      if (e.key === 'Enter' && this.value.trim()) {
                        e.preventDefault();
                        const val = this.value.trim();
                        let exists = false;
                        Array.from(skillsSelect.options).forEach(opt => {
                          if (opt.value.toLowerCase() === val.toLowerCase()) exists = true;
                        });
                        if (!exists) {
                          const opt = document.createElement('option');
                          opt.value = val;
                          opt.textContent = val;
                          opt.selected = true;
                          skillsSelect.appendChild(opt);
                        } else {
                          // Si ya existe, solo selecciona
                          Array.from(skillsSelect.options).forEach(opt => {
                            if (opt.value.toLowerCase() === val.toLowerCase()) opt.selected = true;
                          });
                        }
                        this.value = '';
                      }
                    });

                    // Envío del formulario
                    const form = document.getElementById('registroExpertoForm');
                    const submitBtn = document.getElementById('submitExperto');
                    const diasDisponiblesSelect = document.getElementById('diasDisponibles');
                    if (form && submitBtn) {
                      submitBtn.addEventListener('click', async function () {
                        // Validar campos requeridos de datos bancarios
                        const requiredBankFields = ['banco', 'tipoCuenta', 'numeroCuenta', 'titular', 'tipoDocumento', 'numeroDocumento'];
                        let missingFields = [];

                        requiredBankFields.forEach(fieldName => {
                          const field = document.getElementById(fieldName);
                          if (!field.value.trim()) {
                            missingFields.push(field.previousElementSibling.textContent.replace('*', ''));
                          }
                        });

                        if (missingFields.length > 0) {
                          alert('Por favor completa los siguientes campos obligatorios:\n\n• ' + missingFields.join('\n• '));
                          return;
                        }

                        // Convertir selects múltiples a string separados por coma
                        Array.from(categoriasSelect.options).forEach(opt => {
                          if (opt.selected) opt.setAttribute('selected', 'selected');
                          else opt.removeAttribute('selected');
                        });
                        Array.from(skillsSelect.options).forEach(opt => {
                          if (opt.selected) opt.setAttribute('selected', 'selected');
                          else opt.removeAttribute('selected');
                        });
                        Array.from(diasDisponiblesSelect.options).forEach(opt => {
                          if (opt.selected) opt.setAttribute('selected', 'selected');
                          else opt.removeAttribute('selected');
                        });

                        const formData = new FormData(form);

                        // Unir seleccionados en string para backend legacy
                        formData.set('categorias', Array.from(categoriasSelect.selectedOptions).map(o => o.value).join(','));
                        formData.set('skills', Array.from(skillsSelect.selectedOptions).map(o => o.value).join(','));
                        formData.set('diasDisponibles', Array.from(diasDisponiblesSelect.selectedOptions).map(o => o.value).join(','));

                        // Estructurar datos bancarios como JSON
                        const datosBancarios = {
                          banco: formData.get('banco'),
                          tipoCuenta: formData.get('tipoCuenta'),
                          numeroCuenta: formData.get('numeroCuenta'),
                          titular: formData.get('titular'),
                          tipoDocumento: formData.get('tipoDocumento'),
                          numeroDocumento: formData.get('numeroDocumento'),
                          telefonoContacto: formData.get('telefonoContacto') || '',
                          verificado: false
                        };

                        formData.set('datosBancarios', JSON.stringify(datosBancarios));

                        try {
                          const response = await fetch('/registro-experto', {
                            method: 'POST',
                            body: formData,
                            credentials: 'include'
                          });
                          if (response.redirected) {
                            window.location.href = response.url;
                          } else {
                            const result = await response.text();
                            document.open();
                            document.write(result);
                            document.close();
                          }
                        } catch (error) {
                          alert('Error al enviar el formulario: ' + error.message);
                        }
                      });
                    }
                  });
                </script>
              </form>
    </section>
  </main>

  <!-- Template para nuevos horarios (hidden) -->
  <template id="horario-template">
    <div class="horario-item">
      <div class="form-row">
        <div class="form-group compact">
          <label>Día</label>
          <select name="horarios[{{index}}][dia]" required>
            <option value="Lunes">Lunes</option>
            <option value="Martes">Martes</option>
            <option value="Miércoles">Miércoles</option>
            <option value="Jueves">Jueves</option>
            <option value="Viernes">Viernes</option>
            <option value="Sábado">Sábado</option>
            <option value="Domingo">Domingo</option>
          </select>
        </div>

        <div class="form-group compact">
          <label>Hora inicio</label>
          <select name="horarios[{{index}}][inicio]" required>
            <% for(let h=8; h <=20; h++) { %>
              <option value="<%= h %>:00">
                <%= h %>:00 <%= h < 12 ? 'AM' : 'PM' %>
              </option>
              <% if(h < 20) { %>
                <option value="<%= h %>:30">
                  <%= h %>:30 <%= h < 12 ? 'AM' : 'PM' %>
                </option>
                <% } %>
                  <% } %>
          </select>
        </div>

        <div class="form-group compact">
          <label>Hora fin</label>
          <select name="horarios[{{index}}][fin]" required>
            <% for(let h=9; h <=21; h++) { %>
              <option value="<%= h %>:00">
                <%= h %>:00 <%= h < 12 ? 'AM' : 'PM' %>
              </option>
              <% if(h < 21) { %>
                <option value="<%= h %>:30">
                  <%= h %>:30 <%= h < 12 ? 'AM' : 'PM' %>
                </option>
                <% } %>
                  <% } %>
          </select>
        </div>

        <div class="form-group compact">
          <label>&nbsp;</label>
          <button type="button" class="btn-remove-horario">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M6 18L18 6M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                stroke-linejoin="round" />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </template>


  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const container = document.getElementById('horarios-container');
      const addButton = document.getElementById('add-horario');
      const template = document.getElementById('horario-template').innerHTML;
      let horarioCount = 1;

      // Añadir nuevo horario
      addButton.addEventListener('click', function () {
        const newHorario = template.replace(/\{\{index\}\}/g, horarioCount);
        const div = document.createElement('div');
        div.innerHTML = newHorario;
        container.appendChild(div.firstElementChild);
        horarioCount++;
        // Habilitar botones de eliminar en todos menos el primero
        document.querySelectorAll('.btn-remove-horario').forEach((btn, index) => {
          btn.disabled = index === 0;
        });
      });

      // Eliminar horario
      container.addEventListener('click', function (e) {
        if (e.target.closest('.btn-remove-horario')) {
          const item = e.target.closest('.horario-item');
          item.remove();
          // Si solo queda uno, deshabilitar su botón de eliminar
          const removeButtons = document.querySelectorAll('.btn-remove-horario');
          if (removeButtons.length === 1) {
            removeButtons[0].disabled = true;
          }
        }
      });

      // Validación de horas (opcional)
      container.addEventListener('change', function (e) {
        if (e.target.name && e.target.name.includes('[inicio]')) {
          const inicioSelect = e.target;
          const finSelect = inicioSelect.closest('.form-row').querySelector('select[name$="[fin]"]');
          const inicioValue = inicioSelect.value;
          Array.from(finSelect.options).forEach(option => {
            option.disabled = option.value && option.value <= inicioValue;
          });
          if (finSelect.value && finSelect.value <= inicioValue) {
            finSelect.value = '';
          }
        }
      });
    });
  </script>

</body>

</html>
